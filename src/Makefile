CC = gcc
CFLAGS = -Wall -g

AR = ar
ARFLAGS = rcs


BINS = header pteditor ptedit.o libPTEdit.a demos

all: $(BINS) 

header: module/pteditor.c module/pteditor.h ptedit.c ptedit.h utils.h utils.c 
	echo "#pragma once" > ptedit_header.h
	cat module/pteditor.h ptedit.h ptedit.c utils.h utils.c| \
	sed -e 's/#include ".*"//g' -e "1i // Warning: this file was generated by make. DO NOT EDIT!" | sed 's/extern //g'| sed 's/#define ptedit_fnc/#define ptedit_fnc static/g' >> ptedit_header.h

pteditor: module/pteditor.c
	cd module && make

libPTEdit.a: ptedit.o
	$(AR) $(ARFLAGS) libPTEdit.a ptedit.o

demos: header pteditor
	cd demos && make

tester: 
	cd tester && make

deb:
	dpkg-buildpackage

clean:
	cd module && make clean
	cd demos && make clean
	cd tester && make clean
	rm -f *.a


# all: pteditor ptedit.o example header tests
#
# header: module/pteditor.c module/pteditor.h ptedit.c ptedit.h
# 	echo "#pragma once" > ptedit_header.h
# 	cat module/pteditor.h ptedit.h ptedit.c | \
# 	sed -e 's/#include ".*"//g' -e "1i // Warning: this file was generated by make. DO NOT EDIT!" | sed 's/extern //g'| sed 's/#define ptedit_fnc/#define ptedit_fnc static/g' >> ptedit_header.h
#
# pteditor: module/pteditor.c
# 	cd module && make
#
# example: example.c header
# 	gcc -Wall -Wextra example.c -g -o example
#
# demos: header pteditor
# 	cd demos && make
#
# tests: header pteditor
# 	cd test && make
#
# deb:
# 	dpkg-buildpackage
#
# clean:
# 	cd module && make clean
# 	cd demos && make clean
# 	cd test && make clean
# 	rm -f example *.o
